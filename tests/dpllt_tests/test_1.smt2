(define z () String)
(define y () String)
(define x () String)
(define w () String)
(define v () String)

(assert (or
    (not (str.contains z (str.++ y "ABABAAB" "ABA")))
    (str.contains w "BBAB")
    (not (str.contains v "AABCABB"))
  )
)
(assert (or
    (not (= v (str.++ "BABBBAA" z "BBC")))
    (not (= (str.replace "AABB" "ABA" y) w))
    (not (= (str.++ w "BBABB" v) y))
    (= v (str.++ "BABBBAA" z "BBC"))
  )
)
(assert (or
    (not (= (str.replace "AABB" "ABA" y) w))
    (not (str.contains z (str.++ y "ABABAAB" "ABA")))
    (not (= (str.++ w "BBABB" v) y))
  )
)
(assert (or
    (not (str.contains w "BBAB"))
    (str.contains v "AABCABB")
    (not (str.contains z (str.++ y "ABABAAB" "ABA")))
  )
)
(assert (or
    (not (= v (str.++ "BABBBAA" z "BBC")))
    (not (str.contains w "BBAB"))
  )
)
(assert (or
    (not (= (str.++ w "BBABB" v) y))
    (str.contains v "AABCABB")
    (= (str.replace "AABB" "ABA" y) w)
  )
)
(assert (or
    (= v (str.++ "BABBBAA" z "BBC"))
    (not (str.contains v "AABCABB"))
    (str.contains z (str.++ y "ABABAAB" "ABA"))
    (str.contains w "BBAB")
  )
)
(assert (or
    (= (str.++ w "BBABB" v) y)
    (not (= (str.replace "AABB" "ABA" y) w))
    (not (str.contains v "AABCABB"))
  )
)
(assert (or
    (not (= (str.replace "AABB" "ABA" y) w))
    (str.contains z (str.++ y "ABABAAB" "ABA"))
    (str.contains w "BBAB")
    (= v (str.++ "BABBBAA" z "BBC"))
  )
)
(assert (or
    (not (= (str.++ w "BBABB" v) y))
    (= v (str.++ "BABBBAA" z "BBC"))
  )
)
(assert (or
    (not (str.contains w "BBAB"))
    (str.contains v "AABCABB")
  )
)
(assert (or
    (str.contains z (str.++ y "ABABAAB" "ABA"))
    (= (str.++ w "BBABB" v) y)
    (= (str.replace "AABB" "ABA" y) w)
  )
)
(assert (or
    (not (= (str.++ w "BBABB" v) y))
    (not (= (str.replace "AABB" "ABA" y) w))
    (str.contains v "AABCABB")
    (not (str.contains z (str.++ y "ABABAAB" "ABA")))
  )
)
(assert (or
    (not (str.contains w "BBAB"))
    (not (= v (str.++ "BABBBAA" z "BBC")))
    (not (str.contains v "AABCABB"))
  )
)
(assert (or
    (= (str.++ w "BBABB" v) y)
    (str.contains z (str.++ y "ABABAAB" "ABA"))
    (not (str.contains w "BBAB"))
    (not (= v (str.++ "BABBBAA" z "BBC")))
  )
)
(assert (or
    (= (str.replace "AABB" "ABA" y) w)
    (str.contains z (str.++ y "ABABAAB" "ABA"))
    (not (str.contains v "AABCABB"))
    (= v (str.++ "BABBBAA" z "BBC"))
  )
)
(assert (or
    (not (= (str.++ w "BBABB" v) y))
    (not (str.contains w "BBAB"))
    (= (str.replace "AABB" "ABA" y) w)
  )
)
(assert (or
    (not (= (str.++ w "BBABB" v) y))
    (str.contains w "BBAB")
    (not (= v (str.++ "BABBBAA" z "BBC")))
    (not (= (str.replace "AABB" "ABA" y) w))
  )
)
(assert (or
    (not (str.contains v "AABCABB"))
    (not (str.contains z (str.++ y "ABABAAB" "ABA")))
    (not (str.contains w "BBAB"))
  )
)
(assert (or
    (not (= (str.++ w "BBABB" v) y))
    (not (= v (str.++ "BABBBAA" z "BBC")))
    (not (str.contains v "AABCABB"))
    (= (str.replace "AABB" "ABA" y) w)
  )
)
(assert (or
    (str.contains z (str.++ y "ABABAAB" "ABA"))
    (not (= (str.++ w "BBABB" v) y))
    (not (str.contains z (str.++ y "ABABAAB" "ABA")))
  )
)
(assert (or
    (not (= (str.replace "AABB" "ABA" y) w))
    (not (= v (str.++ "BABBBAA" z "BBC")))
  )
)
(assert (or
    (not (str.contains w "BBAB"))
    (str.contains v "AABCABB")
    (str.contains w "BBAB")
    (= (str.++ w "BBABB" v) y)
  )
)
(assert (or
    (str.contains v "AABCABB")
    (= (str.replace "AABB" "ABA" y) w)
    (= v (str.++ "BABBBAA" z "BBC"))
    (not (str.contains z (str.++ y "ABABAAB" "ABA")))
  )
)
(assert (or
    (= (str.++ w "BBABB" v) y)
    (not (str.contains z (str.++ y "ABABAAB" "ABA")))
  )
)
(assert (or
    (not (= (str.replace "AABB" "ABA" y) w))
    (not (str.contains v "AABCABB"))
    (= v (str.++ "BABBBAA" z "BBC"))
  )
)
(assert (or
    (str.contains w "BBAB")
    (not (str.contains w "BBAB"))
  )
)
(assert (or
    (= (str.++ w "BBABB" v) y)
    (not (= v (str.++ "BABBBAA" z "BBC")))
    (not (str.contains v "AABCABB"))
  )
)
(assert (or
    (not (= (str.replace "AABB" "ABA" y) w))
    (not (str.contains z (str.++ y "ABABAAB" "ABA")))
  )
)
(assert (or
    (= (str.++ w "BBABB" v) y)
    (str.contains v "AABCABB")
    (not (= v (str.++ "BABBBAA" z "BBC")))
  )
)